{"version":3,"sources":["App.js"],"names":["MyStack","useState","setSocket","useEffect","newSocket","io","transports","close","window","location","pathname"],"mappings":"gIA6DeA,IAvDC,WACd,MAA4BC,mBAAS,MAArC,WAAeC,GAAf,WAEAC,qBAAU,WACR,IAAMC,EAAYC,YAAG,4BAA6B,CAACC,WAAY,CAAC,eAEhE,OADAJ,EAAUE,GACH,kBAAMA,EAAUG,WACtB,CAACL,IAGYM,OAAOC,SAASC,SAChC,OACE,2D","file":"static/js/app.dcf5a5ec.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport io from 'socket.io-client';\n// import Home from \"./screen/Home\";\n// import Admin from \"./screen/Admin\";\n// import Manage from \"./screen/Manage\";\n\nconst MyStack = () => {\n  const [socket, setSocket] = useState(null)\n  \n  useEffect(() => {\n    const newSocket = io(`backlaypon.alwaysdata.net`, {transports: ['websocket']}); // http://${window.location.hostname}:3000\n    setSocket(newSocket);\n    return () => newSocket.close();\n  }, [setSocket]);\n\n  // show different screen according to the url\n  const urlpath = window.location.pathname;\n  return (\n    <div>\n      C'est bon Ã§a marche\n    </div>\n  )\n  if (urlpath == '/') {\n    return (\n      <div>\n        {socket ? (\n          <div>\n            <Home socket={socket}/>\n          </div>\n        ) : (\n          <div>Not connected</div>\n        )}\n      </div>\n    );\n  } else if (urlpath == '/admin') {\n    return (<div>\n      {socket ? (\n        <div>\n          <Admin socket={socket}/>\n        </div>\n      ) : (\n        <div>Not connected</div>\n      )}\n    </div>);\n  } else if (urlpath == '/manage') {\n    return (<div>\n      {socket ? (\n        <div>\n          <Manage socket={socket}/>\n        </div>\n      ) : (\n        <div>Not connected</div>\n      )}\n    </div>);\n  } else {\n    return (<div></div>);\n  }\n\n  \n};\n\nexport default MyStack\n\n\n\n\n\n\n\n\n\n\n\n// export default function App() {\n//   return (\n//     <View style={styles.container}>\n//       <Text>Open up App.js to start working on your app!</Text>\n//       <StatusBar style=\"auto\" />\n//     </View>\n//   );\n// }\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     backgroundColor: '#fff',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//   },\n// });\n"],"sourceRoot":""}